Single Inheritance:
    *A class inherits from one parent class using the extends keyword. This is the most basic form of inheritance.

Multiple Inheritance:
    *A class can inherit from multiple parent classes.
    *However, TypeScript does not support multiple inheritance directly instead, TypeScript uses mixins to achieve this behavior.(Diamond problem)

Multilevel Inheritance:
    *A class is derived from another class, which is also derived from another class, forming a chain of inheritance.

Hierarchical Inheritance:
    *Multiple classes inherit from a single parent class.

Hybrid Inheritance:
    *A combination of multiple types of inheritance.
    *Since TypeScript doesn't support multiple inheritance, mixins are used to simulate hybrid inheritance where needed.








//Single Inheritance:
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Father = /** @class */ (function () {
    function Father() {
    }
    Father.prototype.Fproperty = function () {
        console.log("Father");
    };
    return Father;
}());
var Son = /** @class */ (function (_super) {
    __extends(Son, _super);
    function Son() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Son.prototype.Sproperty = function () {
        console.log("Son");
    };
    return Son;
}(Father));
//=============================================


